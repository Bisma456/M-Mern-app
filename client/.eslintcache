[{"E:\\mernapp-w_de\\MERNAPP\\client\\src\\index.js":"1","E:\\mernapp-w_de\\MERNAPP\\client\\src\\App.js":"2","E:\\mernapp-w_de\\MERNAPP\\client\\src\\reportWebVitals.js":"3","E:\\mernapp-w_de\\MERNAPP\\client\\src\\store\\store.js":"4","E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\Home.js":"5","E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\Header.js":"6","E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\Users\\Add.js":"7","E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\Users\\SingleUser.js":"8","E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\Posts\\AddPost.js":"9","E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\Posts\\Posts.js":"10","E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\Users\\Users.js":"11","E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\Posts\\SinglePost.js":"12","E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\Posts\\UpdatePost.js":"13","E:\\mernapp-w_de\\MERNAPP\\client\\src\\store\\mainSlice.js":"14","E:\\mernapp-w_de\\MERNAPP\\client\\src\\store\\apis.js":"15","E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\subComponents\\DeleteModal.js":"16"},{"size":639,"mtime":1611294859980,"results":"17","hashOfConfig":"18"},{"size":1548,"mtime":1611294859980,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1611294859980,"results":"20","hashOfConfig":"18"},{"size":184,"mtime":1611295714473,"results":"21","hashOfConfig":"18"},{"size":261,"mtime":1611295703430,"results":"22","hashOfConfig":"18"},{"size":718,"mtime":1611295702933,"results":"23","hashOfConfig":"18"},{"size":2206,"mtime":1611295700551,"results":"24","hashOfConfig":"18"},{"size":1520,"mtime":1611295701127,"results":"25","hashOfConfig":"18"},{"size":2453,"mtime":1611295695448,"results":"26","hashOfConfig":"18"},{"size":2983,"mtime":1611297561078,"results":"27","hashOfConfig":"18"},{"size":1695,"mtime":1611295701640,"results":"28","hashOfConfig":"18"},{"size":1777,"mtime":1611295696968,"results":"29","hashOfConfig":"18"},{"size":2570,"mtime":1611295698645,"results":"30","hashOfConfig":"18"},{"size":1091,"mtime":1611295713318,"results":"31","hashOfConfig":"18"},{"size":1228,"mtime":1611295711710,"results":"32","hashOfConfig":"18"},{"size":1509,"mtime":1611295699422,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1gum77",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"E:\\mernapp-w_de\\MERNAPP\\client\\src\\index.js",[],["73","74"],"E:\\mernapp-w_de\\MERNAPP\\client\\src\\App.js",[],"E:\\mernapp-w_de\\MERNAPP\\client\\src\\reportWebVitals.js",[],"E:\\mernapp-w_de\\MERNAPP\\client\\src\\store\\store.js",[],"E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\Home.js",["75"],"import React from \"react\";\r\nimport bg from \"../images/bb.jpg\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"bg-image\">\r\n      <h1 className=\"title-text pl-5\">\r\n        <i> MERN</i> App ...\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\Header.js",[],"E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\Users\\Add.js",[],"E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\Users\\SingleUser.js",[],"E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\Posts\\AddPost.js",[],"E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\Posts\\Posts.js",["76","77"],"E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\Users\\Users.js",["78","79"],"import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ListGroup, Row, Col, Button } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\nfunction Users() {\r\n  const [state, setstate] = useState([]);\r\n  const [dummy, setdd] = useState([\r\n    {name:'Faiza',email:'faz@gmail.com',id:1},\r\n    {name:'Shehla',email:'shehla@gmail.com',id:2},\r\n  ]);\r\n  useEffect(() => {\r\n      axios.get('http://localhost:4000/api/users/')\r\n      .then((res) => {\r\n        // console.log(res);\r\n        setstate(res.data.data);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  }, []);\r\n  return (\r\n    <Row className=\"mt-5\">\r\n      <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n      <Col lg={6} md={8} sm={10} xs={10}>\r\n        <ListGroup>\r\n          <ListGroup.Item variant=\"primary\">\r\n            <Row className=\"col-headers\">\r\n              <Col>Name</Col>\r\n              <Col>Email</Col>\r\n              <Col>Actions</Col>\r\n            </Row>\r\n          </ListGroup.Item>\r\n\r\n          {state.map((item, ind) => (\r\n            <ListGroup.Item key={ind} variant=\"light\">\r\n              <Row>\r\n                <Col>{item.name}</Col>\r\n                <Col>{item.email}</Col>\r\n                <Col>\r\n                  <Button \r\n                    variant=\"info\"\r\n                    size=\"sm\"\r\n                    as={Link}\r\n                    to={\"/single-user/\" + item._id}\r\n                  >\r\n                    View\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          ))} \r\n        </ListGroup>\r\n      </Col>\r\n      <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\Posts\\SinglePost.js",["80","81","82","83","84"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ListGroup, Row, Col } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchSinglePost } from \"../../store/mainSlice\";\r\n\r\nconst SinglePost = () => {\r\n  const { id } = useParams();\r\n  const [user, setUser] = useState(null);\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:4000/api/posts/\" + id)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n          console.log(res)\r\n          setUser(res.data)\r\n        })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <Row className=\"mt-5\">\r\n      <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n      <Col lg={6} md={8} sm={10} xs={10}>\r\n        <ListGroup>\r\n          <ListGroup.Item variant=\"primary\" className=\"col-headers\">\r\n            Posts\r\n          </ListGroup.Item>\r\n          <ListGroup.Item variant=\"light\">\r\n            <Row>\r\n              <Col className=\"col-headers\">ID</Col>\r\n              <Col>{user?._id}</Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"col-headers\">Title</Col>\r\n              <Col>{user?.title}</Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"col-headers\">Desc</Col>\r\n              {/* <Col>{user?.description}</Col> */}\r\n              <Col>{user?.description}</Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"col-headers\">Image</Col>\r\n              <Col><img width={100} src={user?.img} /></Col>\r\n            </Row>\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </Col>\r\n      <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SinglePost;\r\n","E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\Posts\\UpdatePost.js",["85","86","87","88","89","90"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ListGroup, Row, Col } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchSinglePost } from \"../../store/mainSlice\";\r\nimport axios from 'axios'\r\n\r\nconst UpdatePost = () => {\r\n  const { id } = useParams();\r\n  const [user, setUser] = useState(null);\r\n  const [title, settitle] = useState('')\r\n  const [description, setdescription] = useState('')\r\n  const [img, setimg] = useState('')\r\nconst handleSubmit = (e)=>{\r\n    e.preventDefault()\r\nlet newPost = {title, description ,img}\r\nconsole.log(newPost)\r\naxios.put('http://localhost:4000/api/posts/update/'+id, newPost)\r\n.then(res => console.log(res))\r\n.catch(err => console.log(err, 'error'));\r\n\r\n}\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:4000/api/posts/\" + id)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n          console.log(res)\r\n          setUser(res.data)\r\n          settitle(res.data.title)\r\n          setdescription(res.data.description)\r\n        })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n      <form onSubmit={handleSubmit}>\r\n    <Row className=\"mt-5\">\r\n      <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n      <Col lg={6} md={8} sm={10} xs={10}>\r\n        <ListGroup>\r\n          <ListGroup.Item variant=\"primary\" className=\"col-headers\">\r\n            Posts\r\n          </ListGroup.Item>\r\n          <ListGroup.Item variant=\"light\">\r\n            <Row>\r\n              <Col className=\"col-headers\">ID</Col>\r\n              <Col>{user?._id}</Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"col-headers\">Title</Col>\r\n              <Col><input type=\"text\" value={title}  name='title' onChange={(e) => settitle(e.target.value)} />\r\n</Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"col-headers\">Desc</Col>\r\n              {/* <Col>{user?.description}</Col> */}\r\n              <Col><input type=\"text\" value={description}  name='title' onChange={(e) => setdescription(e.target.value)} /></Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"col-headers\">Image</Col>\r\n              <Col><img width={100} src={user?.img} /></Col>\r\n            </Row>\r\n            <Row>\r\n              <Col><button type='submit'>Update</button></Col>\r\n            </Row>\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </Col>\r\n      <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n    </Row>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UpdatePost;\r\n","E:\\mernapp-w_de\\MERNAPP\\client\\src\\store\\mainSlice.js",[],"E:\\mernapp-w_de\\MERNAPP\\client\\src\\store\\apis.js",["91","92"],"import {createAsyncThunk} from '@reduxjs/toolkit'\r\nimport axios from 'axios';\r\nimport {useSelector,useDispatch} from 'react-redux'\r\n\r\n\r\nexport const fetchSinglePost = createAsyncThunk(\r\n    'singlePost',\r\n    async (data, thunkAPI)=>{\r\n        console.log(\".....\",data)\r\n        try {\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n        const res = await axios.get(\"http://localhost:4000/api/posts/\" + data)\r\n        return res.data.data\r\n        // .then((res) => console.log(res))\r\n        // .catch((err) => console.log(err));\r\n    }\r\n);\r\n// export function fetchAllPosts() {\r\n//     const dispatch = useDispatch()\r\n\r\n//     return async dispatch => {\r\n    \r\n//         try {\r\n//           const response = await fetch('http://localhost:4000/api/posts/')\r\n//           const data = await response.json();\r\n//           console.log(data)\r\n    \r\n//         } catch (error) {\r\n//           console.log('error')\r\n//         }\r\n//       }\r\n// } \r\nexport const fetchAllPosts = createAsyncThunk(\r\n    'fetchAllPosts',\r\n    async (data, thunkAPI)=>{\r\n        const res = await axios.get('http://localhost:4000/api/posts/')\r\n        console.log(\",,,,,,,,,,,\",res)\r\n        return res.data\r\n        \r\n    }\r\n);\r\n","E:\\mernapp-w_de\\MERNAPP\\client\\src\\components\\subComponents\\DeleteModal.js",["93","94"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function DeleteModal(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        console.log(props)\r\n        props.handleDelete(props.id)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n                Delete\r\n      </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete?\"}</DialogTitle>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Ok\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":10},{"ruleId":"99","severity":1,"message":"103","line":5,"column":22,"nodeType":"101","messageId":"102","endLine":5,"endColumn":33},{"ruleId":"99","severity":1,"message":"104","line":6,"column":10,"nodeType":"101","messageId":"102","endLine":6,"endColumn":23},{"ruleId":"99","severity":1,"message":"105","line":8,"column":10,"nodeType":"101","messageId":"102","endLine":8,"endColumn":15},{"ruleId":"99","severity":1,"message":"106","line":8,"column":17,"nodeType":"101","messageId":"102","endLine":8,"endColumn":22},{"ruleId":"99","severity":1,"message":"103","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":21},{"ruleId":"99","severity":1,"message":"107","line":6,"column":10,"nodeType":"101","messageId":"102","endLine":6,"endColumn":25},{"ruleId":"99","severity":1,"message":"108","line":11,"column":9,"nodeType":"101","messageId":"102","endLine":11,"endColumn":17},{"ruleId":"109","severity":1,"message":"110","line":20,"column":6,"nodeType":"111","endLine":20,"endColumn":8,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":46,"column":20,"nodeType":"115","endLine":46,"endColumn":55},{"ruleId":"99","severity":1,"message":"103","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":21},{"ruleId":"99","severity":1,"message":"116","line":5,"column":23,"nodeType":"101","messageId":"102","endLine":5,"endColumn":34},{"ruleId":"99","severity":1,"message":"107","line":6,"column":10,"nodeType":"101","messageId":"102","endLine":6,"endColumn":25},{"ruleId":"99","severity":1,"message":"117","line":14,"column":15,"nodeType":"101","messageId":"102","endLine":14,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":34,"column":6,"nodeType":"111","endLine":34,"endColumn":8,"suggestions":"118"},{"ruleId":"113","severity":1,"message":"114","line":62,"column":20,"nodeType":"115","endLine":62,"endColumn":55},{"ruleId":"99","severity":1,"message":"103","line":3,"column":9,"nodeType":"101","messageId":"102","endLine":3,"endColumn":20},{"ruleId":"99","severity":1,"message":"116","line":3,"column":21,"nodeType":"101","messageId":"102","endLine":3,"endColumn":32},{"ruleId":"99","severity":1,"message":"119","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":21},{"ruleId":"99","severity":1,"message":"120","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":25},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'bg' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'fetchAllPosts' is defined but never used.","'dummy' is assigned a value but never used.","'setdd' is assigned a value but never used.","'fetchSinglePost' is defined but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["123"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useDispatch' is defined but never used.","'setimg' is assigned a value but never used.",["124"],"'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"125","fix":"127"},"Update the dependencies array to be: [id]",{"range":"128","text":"129"},{"range":"130","text":"129"},[676,678],"[id]",[1149,1151]]